package com.rosebushes.alchemyexpanded.item;

import com.mraof.minestuck.item.MSItemTypes;
import com.mraof.minestuck.item.MSItems;
import com.mraof.minestuck.item.weapon.*;
import com.mraof.minestuck.item.weapon.projectiles.ConsumableProjectileWeaponItem;
import com.mraof.minestuck.player.EnumAspect;
import com.rosebushes.alchemyexpanded.item.armor.*;
import com.rosebushes.alchemyexpanded.item.foods.EffectFoodItem;
import com.rosebushes.alchemyexpanded.item.foods.EffectHealingFoodItem;
import com.rosebushes.alchemyexpanded.item.foods.HoneyGushersItem;
import com.rosebushes.alchemyexpanded.item.foods.MilkGushersItem;
import com.rosebushes.alchemyexpanded.item.shield.*;
import com.rosebushes.alchemyexpanded.item.weapon.*;
import com.rosebushes.alchemyexpanded.item.weapon.gun.*;
import net.minecraft.sounds.SoundEvents;
import net.minecraft.util.Mth;
import net.minecraft.world.effect.MobEffects;
import net.minecraft.world.item.ArmorItem;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.Rarity;
import net.minecraft.world.item.Tiers;
import net.minecraft.world.item.alchemy.Potions;
import net.neoforged.neoforge.registries.DeferredItem;
import net.neoforged.neoforge.registries.DeferredRegister;

public class AEItems {
    public static final DeferredRegister.Items REGISTER = DeferredRegister.createItems("alchemyexpanded");
    public static final DeferredItem<Item> AMMO;
    public static final DeferredItem<Item> FLARE;
    public static final DeferredItem<Item> CROCKERCORP_AMMO;
    public static final DeferredItem<Item> LASER_AMMO;
    public static final DeferredItem<Item> CHICKEN_CLUB_STAR;
    public static final DeferredItem<Item> GUN_PARTS;
    public static final DeferredItem<Item> DUMMY_BULLET;
    public static final DeferredItem<Item> DUMMY_CANDY_BULLET;
    public static final DeferredItem<Item> DUMMY_GREEN_SUN_BULLET;
    public static final DeferredItem<Item> DUMMY_FLARE_BULLET;
    public static final DeferredItem<Item> DUMMY_CROCKERCORP_BULLET;
    public static final DeferredItem<Item> AMBER_CHUNK;
    public static final DeferredItem<Item> BLUE_BEAUTY;
    public static final DeferredItem<Item> CURSED_TAPE;
    public static final DeferredItem<Item> SADAKOS_MIXING_BOWL;
    public static final DeferredItem<Item> GREEN_SUN_BOOK;
    public static final DeferredItem<Item> FLAY_DOH;
    public static final DeferredItem<Item> RUST_DYE;
    public static final DeferredItem<Item> BRONZE_DYE;
    public static final DeferredItem<Item> JADE_DYE;
    public static final DeferredItem<Item> INDIGO_DYE;
    public static final DeferredItem<Item> VIOLET_DYE;
    public static final DeferredItem<Item> DITO;
    public static final DeferredItem<Item> DITO_DETRITUS;
    public static final DeferredItem<Item> NUCLEAR_WARHEAD;
    public static final DeferredItem<Item> CHICKEN_CLUB_SALAD;
    public static final DeferredItem<Item> WIZARD_BERRIES;
    public static final DeferredItem<Item> WIZARDBERRY_GUSHERS;
    public static final DeferredItem<Item> HONEY_GUSHERS;
    public static final DeferredItem<Item> MILK_GUSHERS;
    public static final DeferredItem<Item> WHITE_SHIRT;
    public static final DeferredItem<Item> WHITE_SHIRT_SPIROGRAPH;
    public static final DeferredItem<Item> WHITE_SHIRT_SPORK;
    public static final DeferredItem<Item> WHITE_SHIRT_HOUSE;
    public static final DeferredItem<Item> WHITE_SHIRT_CARD;
    public static final DeferredItem<Item> WHITE_SHIRT_PICKAXE;
    public static final DeferredItem<Item> WHITE_SHIRT_PORKCHOP;
    public static final DeferredItem<Item> WHITE_SHIRT_SWORD;
    public static final DeferredItem<Item> WHITE_SHIRT_SHULKER;
    public static final DeferredItem<Item> WHITE_SHIRT_SLIME_GHOST;
    public static final DeferredItem<Item> WHITE_SHIRT_SQUIDDLE;
    public static final DeferredItem<Item> WHITE_SHIRT_RECORD;
    public static final DeferredItem<Item> WHITE_SHIRT_DEVILBEAST;
    public static final DeferredItem<Item> WHITE_SHIRT_FRIGHTENING_BEAST;
    public static final DeferredItem<Item> WHITE_SHIRT_CAT;
    public static final DeferredItem<Item> WHITE_SHIRT_HAT;
    public static final DeferredItem<Item> WHITE_SHIRT_SKULL;
    public static final DeferredItem<Item> BLACK_SHIRT;
    public static final DeferredItem<Item> BLACK_SHIRT_HEARTS;
    public static final DeferredItem<Item> BLACK_SHIRT_CLUBS;
    public static final DeferredItem<Item> BLACK_SHIRT_DIAMONDS;
    public static final DeferredItem<Item> BLACK_SHIRT_SPADES;
    public static final DeferredItem<Item> BLACK_SHIRT_CANCER;
    public static final DeferredItem<Item> BLACK_SHIRT_ARIES;
    public static final DeferredItem<Item> BLACK_SHIRT_TAURUS;
    public static final DeferredItem<Item> BLACK_SHIRT_GEMINI;
    public static final DeferredItem<Item> BLACK_SHIRT_LEO;
    public static final DeferredItem<Item> BLACK_SHIRT_VIRGO;
    public static final DeferredItem<Item> BLACK_SHIRT_LIBRA;
    public static final DeferredItem<Item> BLACK_SHIRT_SCORPIO;
    public static final DeferredItem<Item> BLACK_SHIRT_SAGITTARIUS;
    public static final DeferredItem<Item> BLACK_SHIRT_CAPRICORN;
    public static final DeferredItem<Item> BLACK_SHIRT_AQUARIUS;
    public static final DeferredItem<Item> BLACK_SHIRT_PISCES;
    public static final DeferredItem<Item> SUIT_CHEST;
    public static final DeferredItem<Item> SUIT_PANTS;
    public static final DeferredItem<Item> SUIT_SHOES;
    public static final DeferredItem<Item> SLIME_SUIT_CHEST;
    public static final DeferredItem<Item> SLIME_SUIT_PANTS;
    public static final DeferredItem<Item> WISE_GUY_SLIME_SUIT_CHEST;
    public static final DeferredItem<Item> WISE_GUY_SLIME_SUIT_PANTS;
    public static final DeferredItem<Item> CREW_TOP;
    public static final DeferredItem<Item> CREW_SKIRT;
    public static final DeferredItem<Item> CREW_BOOTS;
    public static final DeferredItem<Item> TOP_OF_ECLECTICA;
    public static final DeferredItem<Item> SKIRT_OF_ECLECTICA;
    public static final DeferredItem<Item> SLIPPERS_OF_ECLECTICA;
    public static final DeferredItem<Item> DEAD_SHUFFLE_TOP;
    public static final DeferredItem<Item> DEAD_SHUFFLE_SKIRT;
    public static final DeferredItem<Item> DEAD_SHUFFLE_BOOTS;
    public static final DeferredItem<Item> SQUARE_GLASSES;
    public static final DeferredItem<Item> ROUND_GLASSES;
    public static final DeferredItem<Item> SHADES;
    public static final DeferredItem<Item> ANIME_SHADES;
    public static final DeferredItem<Item> ITEM_MAGNET_HELMET;
    public static final DeferredItem<Item> GRIST_MAGNET_HELMET;
    public static final DeferredItem<Item> SKAIANET_SNEAKERS;
    public static final DeferredItem<Item> MAGMATIC_HELMET;
    public static final DeferredItem<Item> MAGMATIC_CHESTPLATE;
    public static final DeferredItem<Item> MAGMATIC_LEGGINGS;
    public static final DeferredItem<Item> MAGMATIC_BOOTS;
    public static final DeferredItem<Item> COPPER_SHIELD;
    public static final DeferredItem<Item> STEAM_POWERED_HYDROFAN;
    public static final DeferredItem<Item> PYRE_PROTECTOR;
    public static final DeferredItem<Item> ROSE_BRAMBLE_BUCKLER;
    public static final DeferredItem<Item> RAZOR_SHIELD;
    public static final DeferredItem<Item> POGO_SHIELD;
    public static final DeferredItem<Item> REGISHIELD;
    public static final DeferredItem<Item> COOKING_WITH_SADAKO;
    public static final DeferredItem<Item> RED_DRAGON_LIPSTICK;
    public static final DeferredItem<Item> DRAGON_SAW;
    public static final DeferredItem<Item> CARVED_WAND;
    public static final DeferredItem<Item> RESIN_WAND;
    public static final DeferredItem<Item> BREAK_AUGUR;
    public static final DeferredItem<Item> ANVIL_AURAWAND;
    public static final DeferredItem<Item> GHOST_IN_THE_MACHINE;
    public static final DeferredItem<Item> TILDEATH_DO_US_PART;
    public static final DeferredItem<Item> BELL_BAT;
    public static final DeferredItem<Item> DEAD_RINGER;
    public static final DeferredItem<Item> DEULING_BLADE;
    public static final DeferredItem<Item> FRONTIER_AXE;
    public static final DeferredItem<Item> ASHEN_CHAINSAW;
    public static final DeferredItem<Item> BLACK_SCEPTER;
    public static final DeferredItem<Item> GOLD_SCEPTER;
    public static final DeferredItem<Item> GREEN_SUN_CUESTAFF;
    //public static final DeferredItem<Item> TOPAZ_QUARTET;
    //public static final DeferredItem<Item> OPAL_DECATET;
    public static final DeferredItem<Item> DUMMY_YOYO;
    public static final DeferredItem<Item> DUMMY_ROSE_ROTATOR;
    public static final DeferredItem<Item> DUMMY_ROLLUP_ROTATOR;
    public static final DeferredItem<Item> DUMMY_CERULEAN_STACKS;
    public static final DeferredItem<Item> DUMMY_WIZARD_SPINNER;
    public static final DeferredItem<Item> DUMMY_FIRESCALE_THROWER;
    public static final DeferredItem<Item> DUMMY_CARBON_ORACLE;
    public static final DeferredItem<Item> DUMMY_REGIYOYO;
    public static final DeferredItem<Item> DUMMY_DEATHS_COUNTERWEIGHT;
    public static final DeferredItem<Item> DUMMY_ROTATIONAL_GENESIS;
    public static final DeferredItem<Item> DUMMY_SPINNER_OF_THE_CYCLE;
    public static final DeferredItem<Item> DUMMY_GREEN_SUN_SLEEPER;
    public static final DeferredItem<Item> DUMMY_SUN_RISES;
    public static final DeferredItem<Item> DUMMY_BLACK_DRAGON_DEATH_WHIRLER;
    public static final DeferredItem<Item> DUMMY_OLWYN_LLINYNNOL;
    public static final DeferredItem<Item> YOYO;
    public static final DeferredItem<Item> ROSE_ROTATOR;
    public static final DeferredItem<Item> ROLLUP_ROTATOR;
    public static final DeferredItem<Item> CERULEAN_STACKS;
    public static final DeferredItem<Item> WIZARD_SPINNER;
    public static final DeferredItem<Item> FIRESCALE_THROWER;
    public static final DeferredItem<Item> CARBON_ORACLE;
    public static final DeferredItem<Item> REGIYOYO;
    public static final DeferredItem<Item> DEATHS_COUNTERWEIGHT;
    public static final DeferredItem<Item> ROTATIONAL_GENESIS;
    public static final DeferredItem<Item> SPINNER_OF_THE_CYCLE;
    public static final DeferredItem<Item> GREEN_SUN_SLEEPER;
    public static final DeferredItem<Item> SUN_RISES;
    public static final DeferredItem<Item> BLACK_DRAGON_DEATH_WHIRLER;
    public static final DeferredItem<Item> OLWYN_LLINYNNOL;
    public static final DeferredItem<Item> BOXING_GLOVE;
    public static final DeferredItem<Item> KNUCKLE_DUSTER;
    public static final DeferredItem<Item> REGIKNUCKLE;
    public static final DeferredItem<Item> ROYAL_KNUCKLE;
    public static final DeferredItem<Item> GAUNTLET;
    public static final DeferredItem<Item> NIGHTTIME_KNOCKOUT;
    public static final DeferredItem<Item> MIDNIGHT_BRUISER;
    public static final DeferredItem<Item> FORTUNES_HAND;
    public static final DeferredItem<Item> BOMBING_GLOVE;
    public static final DeferredItem<Item> COBALT_CRYSTAL_PULVERIZER;
    public static final DeferredItem<Item> MELTDOWN_MITT;
    public static final DeferredItem<Item> CRYSTAL_CLAWED_DRAGON_GRIP;
    public static final DeferredItem<Item> LIGHTEST_TOUCH;
    public static final DeferredItem<Item> MANEG;
    public static final DeferredItem<Item> FLINTLOCK_PISTOL;
    public static final DeferredItem<Item> FLARE_GUN;
    public static final DeferredItem<Item> GAMMA_BLASTER;
    public static final DeferredItem<Item> BREATH_BLASTER;
    public static final DeferredItem<Item> NOXIOUS_BURST_CANNON;
    public static final DeferredItem<Item> KEY;
    public static final DeferredItem<Item> REVOLVER;
    public static final DeferredItem<Item> SIXLET_SIXSHOOTER;
    public static final DeferredItem<Item> DAPPLE_DEULY;
    public static final DeferredItem<Item> LASER_PISTOL;
    public static final DeferredItem<Item> WYVERN_FIRE;
    public static final DeferredItem<Item> BERETTA;
    public static final DeferredItem<Item> REGIPISTOL;
    public static final DeferredItem<Item> NETHERITE_KING_KILLER;
    public static final DeferredItem<Item> GOLDEN_GRIP;
    public static final DeferredItem<Item> FORESIGHT_DUELER;
    public static final DeferredItem<Item> GREEN_SUN_SLAMMER;
    public static final DeferredItem<Item> APPEARIFIER_PISTOL;
    public static final DeferredItem<Item> WHITE_WAND;
    public static final DeferredItem<Item> WHITE_MAGNUM;
    public static final DeferredItem<Item> FLINTLOCK_OF_ZILLYHAU;
    public static final DeferredItem<Item> MACHINE_GUN;
    public static final DeferredItem<Item> GIRLS_BEST_FRIEND;
    public static final DeferredItem<Item> GREEN_SUN_STREETSWEEPER;
    public static final DeferredItem<Item> FLINTLOCK_RIFLE;
    public static final DeferredItem<Item> RIFLE;
    public static final DeferredItem<Item> GUNBLADE;
    public static final DeferredItem<Item> CANDY_CARBINE;
    public static final DeferredItem<Item> BLACK_ASSAULT_RIFLE;
    public static final DeferredItem<Item> GOLD_ASSAULT_RIFLE;
    public static final DeferredItem<Item> ENGLISH_EXECUTIONER;
    public static final DeferredItem<Item> SNIPER_RIFLE;
    public static final DeferredItem<Item> REGIRIFLE;
    public static final DeferredItem<Item> LASER_RIFLE;
    public static final DeferredItem<Item> ANNIES_GOT_A_GUN;
    public static final DeferredItem<Item> SHOTGUN;
    public static final DeferredItem<Item> BLUNDERBUSS;
    public static final DeferredItem<Item> BOOMSTICK;
    public static final DeferredItem<Item> BARBASOL_BOMB_LAUNCHER;
    public static final DeferredItem<Item> APPEARIFIER_RIFLE;
    public static final DeferredItem<Item> BLUNDERBUSS_OF_ZILLYWIGH;

    public AEItems() {
    }

    static {
        AMMO = REGISTER.register("ammo", () -> new Item(new Item.Properties()));
        FLARE = REGISTER.register("flare", () -> new Item(new Item.Properties()));
        CROCKERCORP_AMMO = REGISTER.register("crockercorp_ammo", () -> new Item(new Item.Properties()));
        LASER_AMMO = REGISTER.register("laser_ammo", () -> new Item(new Item.Properties()));
        GUN_PARTS = REGISTER.register("gun_parts", () -> new Item(new Item.Properties()));

        CHICKEN_CLUB_STAR = REGISTER.register("chicken_club_star", () -> new ConsumableProjectileWeaponItem((new Item.Properties()), 1.5F, 2.4F, 2));

        DUMMY_BULLET = REGISTER.register("bullet", () -> new Item(new Item.Properties()));
        DUMMY_CANDY_BULLET = REGISTER.register("candy_bullet", () -> new Item(new Item.Properties()));
        DUMMY_GREEN_SUN_BULLET = REGISTER.register("green_sun_bullet", () -> new Item(new Item.Properties()));
        DUMMY_FLARE_BULLET = REGISTER.register("flare_bullet", () -> new Item(new Item.Properties()));
        DUMMY_CROCKERCORP_BULLET = REGISTER.register("crockercorp_bullet", () -> new Item(new Item.Properties()));

        AMBER_CHUNK = REGISTER.register("amber_chunk", () -> new Item(new Item.Properties()));
        BLUE_BEAUTY = REGISTER.register("blue_beauty", () -> new Item(new Item.Properties().stacksTo(1)));
        CURSED_TAPE = REGISTER.register("cursed_tape", () -> new Item(new Item.Properties()));
        SADAKOS_MIXING_BOWL = REGISTER.register("sadakos_mixing_bowl", () -> new MixingBowlItem(new Item.Properties().rarity(Rarity.EPIC)));
        GREEN_SUN_BOOK = REGISTER.register("green_sun_book", () -> new Item(new Item.Properties()));
        FLAY_DOH = REGISTER.register("flay_doh", () -> new Item(new Item.Properties().food(AEFoods.FLAY_DOH)));
        RUST_DYE = REGISTER.register("rust_dye", () -> new Item(new Item.Properties()));
        BRONZE_DYE = REGISTER.register("bronze_dye", () -> new Item(new Item.Properties()));
        JADE_DYE = REGISTER.register("jade_dye", () -> new Item(new Item.Properties()));
        INDIGO_DYE = REGISTER.register("indigo_dye", () -> new Item(new Item.Properties()));
        VIOLET_DYE = REGISTER.register("violet_dye", () -> new Item(new Item.Properties()));

        DITO = REGISTER.register("dito", () -> new Item(new Item.Properties().food(AEFoods.DITO)));
        DITO_DETRITUS = REGISTER.register("dito_detritus", () -> new Item(new Item.Properties().food(AEFoods.DITO_DETRITUS)));
        NUCLEAR_WARHEAD = REGISTER.register("nuclear_warhead", () -> new EffectFoodItem((new Item.Properties().food(AEFoods.WARHEAD)), MobEffects.WITHER, 60, 1));
        CHICKEN_CLUB_SALAD = REGISTER.register("chicken_club_salad", () -> new Item(new Item.Properties().food(AEFoods.CHICKEN_CLUB_SALAD).stacksTo(1)));
        WIZARD_BERRIES = REGISTER.register("wizard_berries", () -> new EffectFoodItem((new Item.Properties().stacksTo(16).food(AEFoods.WIZARD_BERRIES).rarity(Rarity.UNCOMMON)), MobEffects.SLOW_FALLING, 100, 1));
        WIZARDBERRY_GUSHERS = REGISTER.register("wizardberry_gushers", () -> new EffectHealingFoodItem(new Item.Properties().rarity(Rarity.RARE).stacksTo(8).food(AEFoods.WIZARDBERRY_GUSHERS), MobEffects.SLOW_FALLING, 200, 1, 4.5F));
        HONEY_GUSHERS = REGISTER.register("honey_gushers", () -> new HoneyGushersItem(4.0F, (new Item.Properties().food(AEFoods.HONEY_GUSHERS).stacksTo(16))));
        MILK_GUSHERS = REGISTER.register("milk_gushers", () -> new MilkGushersItem(2.5F, (new Item.Properties().food(AEFoods.MILK_GUSHERS).stacksTo(16))));

        WHITE_SHIRT = REGISTER.register("white_shirt", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        WHITE_SHIRT_SPIROGRAPH = REGISTER.register("white_shirt_spirograph", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        WHITE_SHIRT_SPORK = REGISTER.register("white_shirt_spork", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        WHITE_SHIRT_HOUSE = REGISTER.register("white_shirt_house", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        WHITE_SHIRT_CARD = REGISTER.register("white_shirt_card", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        WHITE_SHIRT_PICKAXE = REGISTER.register("white_shirt_pickaxe", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        WHITE_SHIRT_PORKCHOP = REGISTER.register("white_shirt_porkchop", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        WHITE_SHIRT_SWORD = REGISTER.register("white_shirt_sword", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        WHITE_SHIRT_SHULKER = REGISTER.register("white_shirt_shulker", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        WHITE_SHIRT_SLIME_GHOST = REGISTER.register("white_shirt_slime_ghost", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        WHITE_SHIRT_SQUIDDLE = REGISTER.register("white_shirt_squiddle", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        WHITE_SHIRT_RECORD = REGISTER.register("white_shirt_record", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        WHITE_SHIRT_DEVILBEAST = REGISTER.register("white_shirt_devilbeast", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        WHITE_SHIRT_FRIGHTENING_BEAST = REGISTER.register("white_shirt_frightening_beast", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        WHITE_SHIRT_CAT = REGISTER.register("white_shirt_cat", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        WHITE_SHIRT_HAT = REGISTER.register("white_shirt_hat", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        WHITE_SHIRT_SKULL = REGISTER.register("white_shirt_skull", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));

        BLACK_SHIRT = REGISTER.register("black_shirt", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        BLACK_SHIRT_HEARTS = REGISTER.register("black_shirt_hearts", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        BLACK_SHIRT_CLUBS = REGISTER.register("black_shirt_clubs", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        BLACK_SHIRT_DIAMONDS = REGISTER.register("black_shirt_diamonds", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        BLACK_SHIRT_SPADES = REGISTER.register("black_shirt_spades", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        BLACK_SHIRT_CANCER = REGISTER.register("black_shirt_cancer", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        BLACK_SHIRT_ARIES = REGISTER.register("black_shirt_aries", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        BLACK_SHIRT_TAURUS = REGISTER.register("black_shirt_taurus", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        BLACK_SHIRT_GEMINI = REGISTER.register("black_shirt_gemini", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        BLACK_SHIRT_LEO = REGISTER.register("black_shirt_leo", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        BLACK_SHIRT_VIRGO = REGISTER.register("black_shirt_virgo", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        BLACK_SHIRT_LIBRA = REGISTER.register("black_shirt_libra", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        BLACK_SHIRT_SCORPIO = REGISTER.register("black_shirt_scorpio", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        BLACK_SHIRT_SAGITTARIUS = REGISTER.register("black_shirt_sagittarius", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        BLACK_SHIRT_CAPRICORN = REGISTER.register("black_shirt_capricorn", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        BLACK_SHIRT_AQUARIUS = REGISTER.register("black_shirt_aquarius", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        BLACK_SHIRT_PISCES = REGISTER.register("black_shirt_pisces", () -> new AEArmorItem(AEItemTypes.CLOTHES_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));

        SUIT_CHEST = REGISTER.register("suit_chest", () -> new AEArmorItem(AEItemTypes.SUIT_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        SUIT_PANTS = REGISTER.register("suit_pants", () -> new AEArmorItem(AEItemTypes.SUIT_ARMOR, ArmorItem.Type.LEGGINGS, new Item.Properties()));
        SUIT_SHOES = REGISTER.register("suit_shoes", () -> new AEArmorItem(AEItemTypes.SUIT_ARMOR, ArmorItem.Type.BOOTS, new Item.Properties()));
        SLIME_SUIT_CHEST = REGISTER.register("slime_suit_chest", () -> new AEArmorItem(AEItemTypes.SLIME_SUIT_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        SLIME_SUIT_PANTS = REGISTER.register("slime_suit_pants", () -> new AEArmorItem(AEItemTypes.SLIME_SUIT_ARMOR, ArmorItem.Type.LEGGINGS, new Item.Properties()));
        WISE_GUY_SLIME_SUIT_CHEST = REGISTER.register("wise_guy_slime_suit_chest", () -> new AEArmorItem(AEItemTypes.WISE_GUY_SLIME_SUIT_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties().rarity(Rarity.UNCOMMON)));
        WISE_GUY_SLIME_SUIT_PANTS = REGISTER.register("wise_guy_slime_suit_pants", () -> new AEArmorItem(AEItemTypes.WISE_GUY_SLIME_SUIT_ARMOR, ArmorItem.Type.LEGGINGS, new Item.Properties().rarity(Rarity.UNCOMMON)));

        CREW_TOP = REGISTER.register("crew_top", () -> new CrewSuitItem(AEItemTypes.SUIT_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        CREW_SKIRT = REGISTER.register("crew_skirt", () -> new CrewSuitItem(AEItemTypes.SUIT_ARMOR, ArmorItem.Type.LEGGINGS, new Item.Properties()));
        CREW_BOOTS = REGISTER.register("crew_boots", () -> new CrewSuitItem(AEItemTypes.SUIT_ARMOR, ArmorItem.Type.BOOTS, new Item.Properties()));
        DEAD_SHUFFLE_TOP = REGISTER.register("dead_shuffle_top", () -> new DeadShuffleDressItem(AEItemTypes.DEAD_SHUFFLE_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties().rarity(Rarity.UNCOMMON)));
        DEAD_SHUFFLE_SKIRT = REGISTER.register("dead_shuffle_skirt", () -> new DeadShuffleDressItem(AEItemTypes.DEAD_SHUFFLE_ARMOR, ArmorItem.Type.LEGGINGS, new Item.Properties().rarity(Rarity.UNCOMMON)));
        DEAD_SHUFFLE_BOOTS = REGISTER.register("dead_shuffle_boots", () -> new DeadShuffleDressItem(AEItemTypes.DEAD_SHUFFLE_ARMOR, ArmorItem.Type.BOOTS, new Item.Properties().rarity(Rarity.UNCOMMON)));

        TOP_OF_ECLECTICA = REGISTER.register("top_of_eclectica", () -> new DressOfEclecticaItem(AEItemTypes.ECLECTICA_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        SKIRT_OF_ECLECTICA = REGISTER.register("skirt_of_eclectica", () -> new DressOfEclecticaItem(AEItemTypes.ECLECTICA_ARMOR, ArmorItem.Type.LEGGINGS, new Item.Properties()));
        SLIPPERS_OF_ECLECTICA = REGISTER.register("slippers_of_eclectica", () -> new DressOfEclecticaItem(AEItemTypes.ECLECTICA_ARMOR, ArmorItem.Type.BOOTS, new Item.Properties()));

        SQUARE_GLASSES = REGISTER.register("square_glasses", () -> new AEArmorItem(AEItemTypes.SHADES_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(800)));
        ROUND_GLASSES = REGISTER.register("round_glasses", () -> new AEArmorItem(AEItemTypes.SHADES_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(800)));
        SHADES = REGISTER.register("shades", () -> new AEArmorItem(AEItemTypes.SHADES_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(800)));
        ANIME_SHADES = REGISTER.register("anime_shades", () -> new AEArmorItem(AEItemTypes.SHADES_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(800)));

        ITEM_MAGNET_HELMET = REGISTER.register("item_magnet_helmet", () -> new ItemMagnetArmorItem(AEItemTypes.MAGNET_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(1406), 6));
        GRIST_MAGNET_HELMET = REGISTER.register("grist_magnet_helmet", () -> new GristMagnetArmorItem(AEItemTypes.MAGNET_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(1824), 6));
        SKAIANET_SNEAKERS = REGISTER.register("skaianet_sneakers", () -> new SkaianetSneakersArmorItem(new Item.Properties().durability(1200)));

        MAGMATIC_HELMET = REGISTER.register("magmatic_helmet", () -> new MagmaticArmorItem(AEItemTypes.MAGMATIC_ARMOR, ArmorItem.Type.HELMET, new Item.Properties()));
        MAGMATIC_CHESTPLATE = REGISTER.register("magmatic_chestplate", () -> new MagmaticArmorItem(AEItemTypes.MAGMATIC_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties()));
        MAGMATIC_LEGGINGS = REGISTER.register("magmatic_leggings", () -> new MagmaticArmorItem(AEItemTypes.MAGMATIC_ARMOR, ArmorItem.Type.LEGGINGS, new Item.Properties()));
        MAGMATIC_BOOTS = REGISTER.register("magmatic_boots", () -> new MagmaticArmorItem(AEItemTypes.MAGMATIC_ARMOR, ArmorItem.Type.BOOTS, new Item.Properties()));

        COPPER_SHIELD = REGISTER.register("copper_shield", () -> new AEShieldItem(AEItemTypes.SHIELD_TOOL_TYPE, new Item.Properties().durability(600), 0.5, 1.0, -0.1));
        STEAM_POWERED_HYDROFAN = REGISTER.register("steam_powered_hydrofan", () -> new WaterJetShieldItem(new Item.Properties().durability(950), 0.5, 1.5, 0.05));
        PYRE_PROTECTOR = REGISTER.register("pyre_protector", () -> new FireShieldItem(new Item.Properties().durability(1162), 1.5, 1.0, -0.2));
        ROSE_BRAMBLE_BUCKLER = REGISTER.register("rose_bramble_buckler", () -> new DamagingShieldItem(new Item.Properties().durability(948), 1.5, 1.0, 0));
        RAZOR_SHIELD = REGISTER.register("razor_shield", () -> new DamagingShieldItem(new Item.Properties().durability(756), 2.5, 0.5, 0));
        POGO_SHIELD = REGISTER.register("pogo_shield", () -> new PogoShieldItem(new Item.Properties().durability(1413), 1.0, 2.0, -0.2));
        REGISHIELD = REGISTER.register("regishield", () -> new AEShieldItem(AEItemTypes.SHIELD_TOOL_TYPE, new Item.Properties().durability(1650), 2.0, 2.0, -0.15));

        COOKING_WITH_SADAKO = REGISTER.register("cooking_with_sadako", () -> new WeaponItem((new WeaponItem.Builder(MSItemTypes.HORRORTERROR_TIER, 1, -2.4F)).efficiency(2.0F).set(MSItemTypes.SHOVEL_TOOL), new Item.Properties().rarity(Rarity.RARE)));

        DRAGON_SAW = REGISTER.register("dragon_saw", () -> new WeaponItem(new WeaponItem.Builder(Tiers.DIAMOND, 2, -1.5F).efficiency(10.0F).set(MSItemTypes.CHAINSAW_TOOL).set(ItemRightClickEffect.switchTo(AEItems.RED_DRAGON_LIPSTICK)), new Item.Properties().durability(450)));
        RED_DRAGON_LIPSTICK = REGISTER.register("red_dragon_lipstick", () -> new WeaponItem(new WeaponItem.Builder(Tiers.IRON, -1, -0.5F).efficiency(10.0F).set(ItemRightClickEffect.switchTo(AEItems.DRAGON_SAW)), new Item.Properties().durability(450)));

        CARVED_WAND = REGISTER.register("carved_wand", () -> new WeaponItem((new WeaponItem.Builder(Tiers.WOOD, 3, -1.0F).efficiency(10.0F).set(MSItemTypes.WAND_TOOL).set(MagicRangedRightClickEffect.STANDARD_MAGIC)), new Item.Properties().durability(824)));
        RESIN_WAND = REGISTER.register("resin_wand", () -> new WeaponItem((new WeaponItem.Builder(MSItemTypes.CORUNDUM_TIER, 0, -1.0F).efficiency(10.0F).set(MSItemTypes.WAND_TOOL).set(MagicAOERightClickEffect.FIRE_MAGIC)), new Item.Properties().durability(1162)));
        BREAK_AUGUR = REGISTER.register("break_augur", () -> new WeaponItem((new WeaponItem.Builder(Tiers.IRON, 2, -1.0F).efficiency(10.0F).set(MSItemTypes.WAND_TOOL).set(MagicRangedRightClickEffect.POOL_CUE_MAGIC)), new Item.Properties().durability(1585)));
        ANVIL_AURAWAND = REGISTER.register("anvil_aurawand", () -> new WeaponItem((new WeaponItem.Builder(Tiers.IRON, 3, -1.0F).efficiency(10.0F).set(MSItemTypes.WAND_TOOL).set(MagicAOERightClickEffect.FIRE_MAGIC)), new Item.Properties().durability(1434)));

        GHOST_IN_THE_MACHINE = REGISTER.register("ghost_in_the_machine", () -> new WeaponItem((new WeaponItem.Builder(MSItemTypes.HORRORTERROR_TIER, 2, -1.0F)).efficiency(1.0F).set(MSItemTypes.KEY_TOOL), new Item.Properties().rarity(Rarity.RARE)));

        TILDEATH_DO_US_PART = REGISTER.register("tildeath_do_us_part", () -> new WeaponItem((new WeaponItem.Builder(MSItemTypes.EMERALD_TIER, 1, -2.6F)).efficiency(1.0F).set(MSItemTypes.SCYTHE_TOOL), new Item.Properties().rarity(Rarity.UNCOMMON)));

        BELL_BAT = REGISTER.register("bell_bat", () -> new WeaponItem((new WeaponItem.Builder(Tiers.IRON, 1, -2.8F)).efficiency(1.0F).add(OnHitEffect.playSound((() -> SoundEvents.BELL_BLOCK), 1.0F, 1.0F)), new Item.Properties()));
        DEAD_RINGER = REGISTER.register("dead_ringer", () -> new WeaponItem((new WeaponItem.Builder(MSItemTypes.REGI_TIER, 2, -2.8F)).efficiency(1.0F).add(OnHitEffect.playSound((() -> SoundEvents.BELL_BLOCK), 1.0F, 0.6F)), new Item.Properties().rarity(Rarity.RARE)));

        KEY = REGISTER.register("key", () -> new WeaponItem((new WeaponItem.Builder(Tiers.IRON, 0, -1.0F).efficiency(1.0F).set(MSItemTypes.KEY_TOOL).set(ItemRightClickEffect.switchTo(AEItems.REVOLVER))), new Item.Properties()));
        FRONTIER_AXE = REGISTER.register("frontier_axe", () -> new WeaponItem((new WeaponItem.Builder(Tiers.DIAMOND, 7, -3.0F)).efficiency(5.0F).set(MSItemTypes.AXE_TOOL).set(ItemRightClickEffect.switchTo(AEItems.ANNIES_GOT_A_GUN)), new Item.Properties().rarity(Rarity.RARE)));
        DEULING_BLADE = REGISTER.register("deuling_blade", () -> new WeaponItem((new WeaponItem.Builder(Tiers.DIAMOND, 5, -2.4F)).efficiency(1.0F).set(MSItemTypes.SWORD_TOOL).set(ItemRightClickEffect.switchTo(AEItems.DAPPLE_DEULY)), new Item.Properties().rarity(Rarity.RARE)));
        ASHEN_CHAINSAW = REGISTER.register("ashen_chainsaw", () -> new WeaponItem((new WeaponItem.Builder(Tiers.NETHERITE, 3, -1.5F).efficiency(10.0F).set(MSItemTypes.CHAINSAW_TOOL).set(ItemRightClickEffect.switchTo(AEItems.BOOMSTICK))), new Item.Properties().durability(1800).rarity(Rarity.UNCOMMON)));
        BLACK_SCEPTER = REGISTER.register("black_scepter", () -> new WeaponItem((new WeaponItem.Builder(Tiers.IRON, 2, -2.0F)).efficiency(1.0F).set(ItemRightClickEffect.switchTo(AEItems.BLACK_ASSAULT_RIFLE)), new Item.Properties()));
        GOLD_SCEPTER = REGISTER.register("gold_scepter", () -> new WeaponItem((new WeaponItem.Builder(Tiers.DIAMOND, 3, -2.0F)).efficiency(1.0F).set(ItemRightClickEffect.switchTo(AEItems.GOLD_ASSAULT_RIFLE)), new Item.Properties().rarity(Rarity.UNCOMMON)));
        GREEN_SUN_CUESTAFF = REGISTER.register("green_sun_cuestaff", () -> new WeaponItem((new WeaponItem.Builder(Tiers.NETHERITE, 7, -2.0F)).efficiency(1.0F).set(ItemRightClickEffect.switchTo(AEItems.ENGLISH_EXECUTIONER)).add(OnHitEffect.requireAspect(EnumAspect.TIME, OnHitEffect.TIME_SLOWNESS_AOE)), new Item.Properties().rarity(Rarity.EPIC)));
        WHITE_WAND = REGISTER.register("white_wand", () -> new WeaponItem(new WeaponItem.Builder(MSItemTypes.WELSH_TIER, -1, -1.0F).efficiency(1.0F).set(MSItemTypes.WAND_TOOL).set(ItemRightClickEffect.switchTo(AEItems.WHITE_MAGNUM)), new Item.Properties()));

        //TOPAZ_QUARTET = REGISTER.register("topaz_quartet", () -> new DiceWeaponItem((new Item.Properties().rarity(Rarity.RARE).durability(444)), 4, 4, 1, true));
        //OPAL_DECATET = REGISTER.register("opal_decatet", () -> new DiceWeaponItem((new Item.Properties().rarity(Rarity.RARE).durability(1010)), 10, 10, 1, true));

        DUMMY_YOYO = REGISTER.register("dummy_yoyo", () -> new Item(new Item.Properties()));
        DUMMY_ROSE_ROTATOR = REGISTER.register("dummy_rose_rotator", () -> new Item(new Item.Properties()));
        DUMMY_ROLLUP_ROTATOR = REGISTER.register("dummy_rollup_rotator", () -> new Item(new Item.Properties()));
        DUMMY_CERULEAN_STACKS = REGISTER.register("dummy_cerulean_stacks", () -> new Item(new Item.Properties()));
        DUMMY_WIZARD_SPINNER = REGISTER.register("dummy_wizard_spinner", () -> new Item(new Item.Properties()));
        DUMMY_FIRESCALE_THROWER = REGISTER.register("dummy_firescale_thrower", () -> new Item(new Item.Properties()));
        DUMMY_CARBON_ORACLE = REGISTER.register("dummy_carbon_oracle", () -> new Item(new Item.Properties()));
        DUMMY_REGIYOYO = REGISTER.register("dummy_regiyoyo", () -> new Item(new Item.Properties()));
        DUMMY_DEATHS_COUNTERWEIGHT = REGISTER.register("dummy_deaths_counterweight", () -> new Item(new Item.Properties()));
        DUMMY_ROTATIONAL_GENESIS = REGISTER.register("dummy_rotational_genesis", () -> new Item(new Item.Properties()));
        DUMMY_SPINNER_OF_THE_CYCLE = REGISTER.register("dummy_spinner_of_the_cycle", () -> new Item(new Item.Properties()));
        DUMMY_GREEN_SUN_SLEEPER = REGISTER.register("dummy_green_sun_sleeper", () -> new Item(new Item.Properties()));
        DUMMY_SUN_RISES = REGISTER.register("dummy_sun_rises", () -> new Item(new Item.Properties()));
        DUMMY_BLACK_DRAGON_DEATH_WHIRLER = REGISTER.register("dummy_black_dragon_death_whirler", () -> new Item(new Item.Properties()));
        DUMMY_OLWYN_LLINYNNOL = REGISTER.register("dummy_olwyn_llinynnol", () -> new Item(new Item.Properties()));

        YOYO = REGISTER.register("yoyo", () -> new YoYoWeaponItem(new Item.Properties().durability(250), 3, 16, 3, AEItems.DUMMY_YOYO.get()));
        ROSE_ROTATOR = REGISTER.register("rose_rotator", () -> new YoYoWeaponItem(new Item.Properties().durability(365), 4, 16, 5, AEItems.DUMMY_ROSE_ROTATOR.get()));
        ROLLUP_ROTATOR = REGISTER.register("rollup_rotator", () -> new CandyYoYoWeaponItem(new Item.Properties().durability(278), 2, 16, 5, AEItems.DUMMY_ROLLUP_ROTATOR.get()));
        CERULEAN_STACKS = REGISTER.register("cerulean_stacks", () -> new YoYoWeaponItem(new Item.Properties().durability(484), 4, 16, 6, AEItems.DUMMY_CERULEAN_STACKS.get()));
        WIZARD_SPINNER = REGISTER.register("wizard_spinner", () -> new YoYoWeaponItem(new Item.Properties().durability(577).rarity(Rarity.UNCOMMON), 4, 16, 7, AEItems.DUMMY_WIZARD_SPINNER.get()));
        FIRESCALE_THROWER = REGISTER.register("firescale_thrower", () -> new FireYoYoWeaponItem(new Item.Properties().durability(748).rarity(Rarity.UNCOMMON), 6, 16, 7, AEItems.DUMMY_FIRESCALE_THROWER.get()));
        CARBON_ORACLE = REGISTER.register("carbon_oracle", () -> new YoYoWeaponItem(new Item.Properties().durability(1256).rarity(Rarity.UNCOMMON), 7, 16, 6, AEItems.DUMMY_CARBON_ORACLE.get()));
        REGIYOYO = REGISTER.register("regiyoyo", () -> new YoYoWeaponItem(new Item.Properties().durability(864), 6, 16, 6, AEItems.DUMMY_REGIYOYO.get()));
        DEATHS_COUNTERWEIGHT = REGISTER.register("deaths_counterweight", () -> new YoYoWeaponItem(new Item.Properties().durability(1142).rarity(Rarity.UNCOMMON), 7, 16, 6, AEItems.DUMMY_DEATHS_COUNTERWEIGHT.get()));
        ROTATIONAL_GENESIS = REGISTER.register("rotational_genesis", () -> new YoYoWeaponItem(new Item.Properties().durability(1460).rarity(Rarity.UNCOMMON), 8, 16, 8, AEItems.DUMMY_ROTATIONAL_GENESIS.get()));
        SPINNER_OF_THE_CYCLE = REGISTER.register("spinner_of_the_cycle", () -> new YoYoWeaponItem(new Item.Properties().durability(2413).rarity(Rarity.RARE), 9, 16, 10, AEItems.DUMMY_SPINNER_OF_THE_CYCLE.get()));
        GREEN_SUN_SLEEPER = REGISTER.register("green_sun_sleeper", () -> new YoYoWeaponItem(new Item.Properties().durability(3200).rarity(Rarity.RARE), 10, 16, 12, AEItems.DUMMY_GREEN_SUN_SLEEPER.get()));
        SUN_RISES = REGISTER.register("sun_rises", () -> new FireYoYoWeaponItem(new Item.Properties().durability(1656).rarity(Rarity.UNCOMMON), 8, 16, 6, AEItems.DUMMY_SUN_RISES.get()));
        BLACK_DRAGON_DEATH_WHIRLER = REGISTER.register("black_dragon_death_whirler", () -> new YoYoWeaponItem(new Item.Properties().durability(2268).rarity(Rarity.UNCOMMON), 9, 16, 8, AEItems.DUMMY_BLACK_DRAGON_DEATH_WHIRLER.get()));
        OLWYN_LLINYNNOL = REGISTER.register("olwyn_llinynnol", () -> new YoYoWeaponItem(new Item.Properties().durability(5555), 14, 16, 14, AEItems.DUMMY_OLWYN_LLINYNNOL.get()));

        BOXING_GLOVE = REGISTER.register("boxing_glove", () -> new GloveWeaponItem(new Item.Properties().durability(650), 3, -2.2F, MobEffects.MOVEMENT_SLOWDOWN));
        KNUCKLE_DUSTER = REGISTER.register("knuckle_duster", () -> new GloveWeaponItem(new Item.Properties().durability(732), 4, -2.2F, MobEffects.WITHER));
        REGIKNUCKLE = REGISTER.register("regiknuckle", () -> new GloveWeaponItem(new Item.Properties().durability(1200), 5, -2.2F, MobEffects.WITHER));
        ROYAL_KNUCKLE = REGISTER.register("royal_knuckle", () -> new GloveWeaponItem(new Item.Properties().durability(1628).rarity(Rarity.UNCOMMON), 7, -2.2F, MobEffects.WITHER));
        GAUNTLET = REGISTER.register("gauntlet", () -> new GloveWeaponItem(new Item.Properties().durability(846), 5, -2.2F, MobEffects.WEAKNESS));
        NIGHTTIME_KNOCKOUT = REGISTER.register("nighttime_knockout", () -> new GloveWeaponItem(new Item.Properties().durability(999), 6, -2.2F, MobEffects.MOVEMENT_SLOWDOWN));
        MIDNIGHT_BRUISER = REGISTER.register("midnight_bruiser", () -> new GloveWeaponItem(new Item.Properties().durability(1340), 7, -2.2F, MobEffects.MOVEMENT_SLOWDOWN));
        FORTUNES_HAND = REGISTER.register("fortunes_hand", () -> new GloveWeaponItem(new Item.Properties().durability(1077).rarity(Rarity.UNCOMMON), 6, -2.2F, MobEffects.WEAKNESS));
        BOMBING_GLOVE = REGISTER.register("bombing_glove", () -> new ExplodingGloveWeaponItem(new Item.Properties().durability(950), 2, -2.2F, MobEffects.MOVEMENT_SLOWDOWN, 3));
        COBALT_CRYSTAL_PULVERIZER = REGISTER.register("cobalt_crystal_pulverizer", () -> new GloveWeaponItem(new Item.Properties().durability(1460).rarity(Rarity.UNCOMMON), 7, -2.2F, MobEffects.WEAKNESS));
        MELTDOWN_MITT = REGISTER.register("meltdown_mitt", () -> new ExplodingGloveWeaponItem(new Item.Properties().durability(1680).rarity(Rarity.UNCOMMON), 3, -2.2F, MobEffects.MOVEMENT_SLOWDOWN, 6));
        CRYSTAL_CLAWED_DRAGON_GRIP = REGISTER.register("crystal_clawed_dragon_grip", () -> new GloveWeaponItem(new Item.Properties().durability(2140).rarity(Rarity.UNCOMMON), 8, -2.2F, MobEffects.WEAKNESS));
        LIGHTEST_TOUCH = REGISTER.register("lightest_touch", () -> new GloveWeaponItem(new Item.Properties().durability(2620).rarity(Rarity.RARE), 7, -2.2F, MobEffects.LEVITATION));
        MANEG = REGISTER.register("maneg", () -> new GloveWeaponItem(new Item.Properties().durability(4500), 10, -2.2F, MobEffects.WEAKNESS));

        FLINTLOCK_PISTOL = REGISTER.register("flintlock_pistol", () -> new GunWeaponItem((new Item.Properties()), 3.5F, 2.0F, 1, 3.0F, 10, 1, 1, 80, false, true, AEItems.AMMO.get(), null));
        FLARE_GUN = REGISTER.register("flare_gun", () -> new FlareGunWeaponItem((new Item.Properties()), 5.5F, 1.5, 1, 0.5F, 10, 1, 1, 80, false, true, AEItems.FLARE.get(), null));
        GAMMA_BLASTER = REGISTER.register("gamma_blaster", () -> new EffectLaserGunWeaponItem((new Item.Properties()), 7.5F, 20, 10, 10, 1, 80, MobEffects.WITHER, 80, false, true, AEItems.LASER_AMMO.get(), null));
        BREATH_BLASTER = REGISTER.register("breath_blaster", () -> new EffectCloudGunWeaponItem((new Item.Properties().rarity(Rarity.UNCOMMON)), 10.5F, 2.0F, 1, 0.5F, 10, 4, 1, 100, 60, 2, Mth.hsvToRgb(0.8F, 1.0F, 0.6F), Potions.HARMING.value(), false, true, AEItems.FLARE.get(), null));
        NOXIOUS_BURST_CANNON = REGISTER.register("noxious_burst_cannon", () -> new EffectCloudGunWeaponItem((new Item.Properties().rarity(Rarity.UNCOMMON)), 10.5F, 2.0F, 1, 0.5F, 8, 8, 2, 80, 60, 3, Mth.hsvToRgb(0.3F, 1.0F, 0.8F), Potions.STRONG_POISON.value(), false, true, AEItems.FLARE.get(), null));
        REVOLVER = REGISTER.register("revolver", () -> new GunWeaponItem((new Item.Properties()), 6.0F, 3.0, 1, 0.1F, 10, 6, 2, 70, false, true, AEItems.AMMO.get(), AEItems.KEY.get()));
        SIXLET_SIXSHOOTER = REGISTER.register("sixlet_sixshooter", () -> new CandyGunWeaponItem((new Item.Properties()), 4.5F, 3.0, 1, 0.1F, 10, 6, 1, 70, false, true, MSItems.CANDY_CORN.get(), null));
        DAPPLE_DEULY = REGISTER.register("dapple_deuly", () -> new GunWeaponItem((new Item.Properties().rarity(Rarity.RARE)), 9.5F, 3.0, 1, 0.1F, 8, 18, 3, 60, false, true, AEItems.AMMO.get(), AEItems.DEULING_BLADE.get()));
        LASER_PISTOL = REGISTER.register("laser_pistol", () -> new LaserGunWeaponItem((new Item.Properties().rarity(Rarity.UNCOMMON)), 8.0F, 16, 10, 12, 2, 70, false, true, AEItems.LASER_AMMO.get(), null));
        WYVERN_FIRE = REGISTER.register("wyvern_fire", () -> new FlamethrowerGunWeaponItem((new Item.Properties().rarity(Rarity.UNCOMMON)), 1.0F, 8, 1, 60, 4, 80, false, true, AEItems.FLARE.get(), null));
        BERETTA = REGISTER.register("beretta", () -> new GunWeaponItem((new Item.Properties()), 7.5F, 3.0, 1, 0.1F, 8, 15, 2, 70, false, true, AEItems.AMMO.get(), null));
        REGIPISTOL = REGISTER.register("regipistol", () -> new GunWeaponItem((new Item.Properties()), 9.5F, 3.0, 1, 0.1F, 8, 24, 2, 70, false, true, AEItems.AMMO.get(), null));
        NETHERITE_KING_KILLER = REGISTER.register("netherite_king_killer", () -> new FlareGunWeaponItem((new Item.Properties().rarity(Rarity.UNCOMMON)), 11.5F, 3.0, 1, 0.1F, 8, 42, 2, 60, false, true, AEItems.AMMO.get(), null));
        GOLDEN_GRIP = REGISTER.register("golden_grip", () -> new GunWeaponItem((new Item.Properties().rarity(Rarity.UNCOMMON)), 9.5F, 3.0, 1, 0.1F, 8, 30, 3, 70, false, true, AEItems.AMMO.get(), null));
        FORESIGHT_DUELER = REGISTER.register("foresight_dueler", () -> new GunWeaponItem((new Item.Properties().rarity(Rarity.RARE)), 11.5F, 3.0, 1, 0.1F, 8, 60, 3, 70, false, true, AEItems.AMMO.get(), null));
        GREEN_SUN_SLAMMER = REGISTER.register("green_sun_slammer", () -> new TeleportGunWeaponItem((new Item.Properties().rarity(Rarity.EPIC)), 14.5F, 3.0, 1, 0.1F, 8, 90, 4, 60, false, true, AEItems.AMMO.get(), null, 1, 3, 0, 1, 3));
        APPEARIFIER_PISTOL = REGISTER.register("appearifier_pistol", () -> new AppearifierGunWeaponItem((new Item.Properties().rarity(Rarity.RARE)), 4.0F, 0.0F, 10, 1, 1, 60, false, AEItems.CROCKERCORP_AMMO.get(), null));
        WHITE_MAGNUM = REGISTER.register("white_magnum", () -> new CueballGunWeaponItem((new Item.Properties()), 3.0F, 0.0F, 10, 80, AEItems.WHITE_WAND.get()));
        FLINTLOCK_OF_ZILLYHAU = REGISTER.register("flintlock_of_zillyhau", () -> new GunWeaponItem((new Item.Properties().rarity(Rarity.EPIC)), 20.0F, 3.0, 1, 0.1F, 10, 60, 1, 40, true, true, AEItems.AMMO.get(), null));

        FLINTLOCK_RIFLE = REGISTER.register("flintlock_rifle", () -> new GunWeaponItem((new Item.Properties()), 5.5F, 2.0F, 1, 3.0F, 10, 1, 1, 80, false, false, AEItems.AMMO.get(), null));
        SHOTGUN = REGISTER.register("shotgun", () -> new GunWeaponItem((new Item.Properties()), 3.0F, 1.0F, 8, 20.0F, 20, 1, 2, 60, false, false, AEItems.AMMO.get(), null));
        BLUNDERBUSS = REGISTER.register("blunderbuss", () -> new GunWeaponItem((new Item.Properties()), 6.0F, 1.0F, 10, 20.0F, 20, 1, 2, 60, false, false, AEItems.AMMO.get(), null));
        BOOMSTICK = REGISTER.register("boomstick", () -> new GunWeaponItem((new Item.Properties().rarity(Rarity.UNCOMMON)), 8.5F, 1.0F, 10, 20.0F, 20, 2, 3, 60, false, false, AEItems.AMMO.get(),  AEItems.ASHEN_CHAINSAW.get()));
        RIFLE = REGISTER.register("rifle", () -> new GunWeaponItem((new Item.Properties()), 10.0F, 3.0, 1, 0.1F, 10, 4, 1, 50, false, false, AEItems.AMMO.get(), null));
        GUNBLADE = REGISTER.register("gunblade", () -> new SwordGunWeaponItem((new Item.Properties()), 5, -2.4F, 8.0F, 3.0, 1, 0.5F, 20, 10, 2, 60, false, false, AEItems.AMMO.get(), null));
        CANDY_CARBINE = REGISTER.register("candy_carbine", () -> new CandyGunWeaponItem((new Item.Properties()), 8.0F, 3.0, 1, 0.1F, 10, 4, 1, 50, false, false, MSItems.CANDY_CORN.get(), null));
        BLACK_ASSAULT_RIFLE = REGISTER.register("black_assault_rifle", () -> new GunWeaponItem((new Item.Properties()), 5.5F, 3.5, 1, 2.0F, 4, 20, 2, 80, false, false, AEItems.AMMO.get(), AEItems.BLACK_SCEPTER.get()));
        GOLD_ASSAULT_RIFLE = REGISTER.register("gold_assault_rifle", () -> new GunWeaponItem((new Item.Properties().rarity(Rarity.UNCOMMON)), 8.0F, 3.0, 1, 2.0F, 4, 40, 2, 80, false, false, AEItems.AMMO.get(), AEItems.GOLD_SCEPTER.get()));
        ENGLISH_EXECUTIONER = REGISTER.register("english_executioner", () -> new ScopedGunWeaponItem((new Item.Properties().rarity(Rarity.EPIC)), 12.0F, 3.0, 1, 2.0F, 4, 100, 0, 0, true, false, AEItems.AMMO.get(), AEItems.GREEN_SUN_CUESTAFF.get()));
        SNIPER_RIFLE = REGISTER.register("sniper_rifle", () -> new ScopedGunWeaponItem((new Item.Properties()), 20.0F, 4.0, 1, 0.0F, 10, 1, 1, 80, false, false, AEItems.AMMO.get(), null));
        REGIRIFLE = REGISTER.register("regirifle", () -> new ScopedGunWeaponItem((new Item.Properties()), 24.0F, 4.0, 1, 0.0F, 20, 2, 1, 80, false, false, AEItems.AMMO.get(), null));
        LASER_RIFLE = REGISTER.register("laser_rifle", () -> new LaserGunWeaponItem((new Item.Properties().rarity(Rarity.UNCOMMON)), 16.0F, 20, 10, 6, 2, 60, false, false, AEItems.LASER_AMMO.get(), null));
        ANNIES_GOT_A_GUN = REGISTER.register("annies_got_a_gun", () -> new GunWeaponItem((new Item.Properties().rarity(Rarity.RARE)), 18.0F, 3.0F, 1, 0.1F, 10, 12, 2, 60, false, false, AEItems.AMMO.get(), AEItems.FRONTIER_AXE.get()));
        MACHINE_GUN = REGISTER.register("machine_gun", () -> new GunWeaponItem((new Item.Properties()), 3.5F, 3.0, 1, 5.0F, 4, 40, 2, 80, false, false, AEItems.AMMO.get(), null));
        GIRLS_BEST_FRIEND = REGISTER.register("girls_best_friend", () -> new GunWeaponItem((new Item.Properties().rarity(Rarity.RARE)), 7.5F, 3.0, 1, 3.0F, 4, 80, 3, 70, false, false, AEItems.AMMO.get(), null));
        GREEN_SUN_STREETSWEEPER = REGISTER.register("green_sun_streetsweeper", () -> new TeleportGunWeaponItem((new Item.Properties().rarity(Rarity.EPIC)), 9.5F, 3.0, 1, 3.0F, 4, 120, 4, 70, false, false, AEItems.AMMO.get(), null, 1, 3, 0, 1, 3));
        BARBASOL_BOMB_LAUNCHER = REGISTER.register("barbasol_bomb_launcher", () -> new BarbasolLauncherGunWeaponItem((new Item.Properties().rarity(Rarity.UNCOMMON)), 20.0F, 2.0F, 1, 0.0F, 10, 1, 1, 80, false, false, MSItems.BARBASOL_BOMB.get(), null));
        APPEARIFIER_RIFLE = REGISTER.register("appearifier_rifle", () -> new AppearifierGunWeaponItem((new Item.Properties().rarity(Rarity.RARE)), 4.0F, 0.0F, 10, 1, 1, 40, false, AEItems.CROCKERCORP_AMMO.get(), null));
        BLUNDERBUSS_OF_ZILLYWIGH = REGISTER.register("blunderbuss_of_zillywigh", () -> new GunWeaponItem((new Item.Properties().rarity(Rarity.EPIC)), 12.0F, 1.0F, 10, 20.0F, 20, 60, 1, 60, true, false, AEItems.AMMO.get(), null));
        }
}
